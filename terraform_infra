
# Conexão com a CloudAWS
provedor "aws" {
    region = "us-east-2"
    access_key = "YOURKEY"
    secret_key = "YOURKEY"
}

#VPC
recurso "aws_vpc" "vpc_bd" {
    cidr_block = "10.0.0.0/16"
    enable_dns_hostnames = true
}
#Subnets Privadas
recurso "aws_subnet" "private_subnet_a" {
    vpc_id = aws_vpc.vpc_bd.id #Associa a VPC "vpc_bd"
    cidr_block = "10.0.1.0/24" #faixa de rede privada
      disponibilidade_zona = "us-east-2a" #Como foi escolhida a região us-east-2, estão disponíveis como "subregiões A, B, C"
}

recurso "aws_subnet" "private_subnet_b" {
    vpc_id = aws_vpc.vpc_bd.id
    cidr_block = "10.0.2.0/24"
  disponibilidade_zone = "us-east-2b"
}

#grupo de subnets em mais de uma zona de disponibilidade 
recurso "aws_db_subnet_group" "db_subnet_group" {
 nome = "dbsubnet"
 subnet_ids = [aws_subnet.private_subnet_a.id, aws_subnet.private_subnet_b.id]
    }

#Instancia PostgreSQL com 10GB na versão 13
recurso "aws_db_instance" "postgresqldb1" {
    identificador = "postgresqldb1"
    alocado_ armazenamento = 10
    engine = "postgres"
    engine_version = "13"
   instance_class = "db.t3.micro"
    nome = "desafiodba"
    username = "stone"
    senha = "1q2w3e4r"
    skip_final_snapshot = true
    multi_az = true #Habilita a alta disponibilidade 
    db_subnet_group_name = aws_db_subnet_group.db_subnet_group.id
    backup_retention_period = "2"
    public_accessible = false #Deverá ser falso para habilitar o acesso ao público
    parameter_group_name = aws_db_parameter_group.postgresparameter.name
    enabled_cloudwatch_logs_exports = ["postgresql", "upgrade"] #Habilita o monitoramento dos logs do Postgresql
    performance_insights_enabled = true #Habilita para monitorar o desempenho 
    
       }

#Cria Replicação da instancia postgresqldb1
    recurso "aws_db_instance" "postgresqldb2" {
    identificador = "postgresqldb2"
    alocado_ armazenamento = 10
    engine = "postgres"
    engine_version = "13"
   instance_class = "db.t3.micro"
    nome = "desafiodba"
    skip_final_snapshot = true
    #multi_az = true
    replicate_source_db = aws_db_instance.postgresqldb1.id #apontamento do master na réplica
    #apply_immediately = "FALSE"
}

# Grupo de parametros Postgres
recurso "aws_db_parameter_group" "postgresparameter" {
    name = "postgresparameter"
    
    family = "postgres13"
parameter{
    name = "shared_preload_libraries"
    valor = "pgaudit"
    apply_method = "imediate"
}  
parameter{
    name = "shared_buffers"
    valor = "256MB"
    apply_method = "imediate"
} 
parameter{
    name = "effective_cache_size"
    valor = "768MB"
    apply_method = "imediate"
} 
parameter{
    name = "work_mem"
    valor = "10MB"
    apply_method = "imediate"
} 
parameter{
    name = "maintenance_work_mem"
    valor = "64MB"
    apply_method = "imediate"
} 
parameter{
    name = "min_wal_size	"
    valor = "1GB"
    apply_method = "imediate"
} 
parameter{
    name = "max_wal_size"
    valor = "3GB"
    apply_method = "imediate"
} 
parameter{
    name = "checkpoint_completion_target"
    valor = "0.9"
    apply_method = "imediate"
} 

parameter{
    name = "wal_buffers"
    valor = "8MB"
    apply_method = "imediate"
} 

parameter{
    name = "max_connections"
    valor = "100"
    apply_method = "imediate"

}
parameter{
    name = "max_worker_processes"
    valor = "2"
    apply_method = "imediate"
} 

parameter{
    name = "max_parallel_workers_per_gather"
    valor = "1"
    apply_method = "imediate"
} 

parameter{
    name = "max_parallel_workers"
    valor = "2"
    apply_method = "imediate"
} 

parameter{
    name = "autovacuum_analyze_threshold"
    valor = "10000"
    apply_method = "imediate"
}

parameter{
    name = "autovacuum_analyze_scale_factor"
    valor = "0"
    apply_method = "imediate"
} 
 
 
 
}


recurso "aws_cloudwatch_metric_alarm" "LagReplication" {
alarm_name = "ReplicaLag"
compare_operator = "GreaterThanThreshold"
metric_name = "ReplicaLag"
avaliação_períodos = "2"
namespace = "AWS / RDS"
estatística = "média"
limiar = "20"
período = "60"
alarm_description = "Defasagem na replicação> 20min"
}
